apiVersion: v1
kind: Namespace
metadata:
  name: ticketing
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: auth-configmap
  namespace: ticketing
---
apiVersion: v1
data:
  COOKIE_SESSION_DOMAIN: .rodarte.tk
  CORS_ORIGIN: https://ticketing.rodarte.tk
  FORCE_INSECURE_COOKIE: "false"
  NATS_CLUSTER_ID: ticketing
  NATS_SERVER_URL: http://nats-service:4222
  NODE_ENV: production
kind: ConfigMap
metadata:
  name: common-configmap
  namespace: ticketing
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: expiration-configmap
  namespace: ticketing
---
apiVersion: v1
data:
  AUTH_MICROSERVICE_NAME: auth-service
  AUTH_MICROSERVICE_PORT: "3000"
  NEXT_PUBLIC_API_URL: https://ticketing-api.rodarte.tk
  NEXT_PUBLIC_ENV: production
  NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: pk_test_51L3nTtIWPfnfPOmq5I97aU1tPKrTiPgdP3DJipBNIJwLRbc4HP8QlGBkL3Fg4GF35YnyNXIYu5giGJuReR5gyysu00nBVr8fYj
  ORDERS_MICROSERVICE_NAME: orders-service
  ORDERS_MICROSERVICE_PORT: "3003"
  PAYMENTS_MICROSERVICE_NAME: payments-service
  PAYMENTS_MICROSERVICE_PORT: "3004"
  TICKETS_MICROSERVICE_NAME: tickets-service
  TICKETS_MICROSERVICE_PORT: "3002"
kind: ConfigMap
metadata:
  name: front-configmap
  namespace: ticketing
---
apiVersion: v1
data:
  EXPIRATION_WINDOW_SECONDS: "900"
kind: ConfigMap
metadata:
  name: orders-configmap
  namespace: ticketing
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: payments-configmap
  namespace: ticketing
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tickets-configmap
  namespace: ticketing
---
apiVersion: v1
kind: Service
metadata:
  name: auth-mongodb-service
  namespace: ticketing
spec:
  ports:
  - name: db
    port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: auth-mongodb
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: ticketing
spec:
  ports:
  - name: auth
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: auth
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: expiration-redis-service
  namespace: ticketing
spec:
  ports:
  - name: db
    port: 6379
    protocol: TCP
    targetPort: 6379
  selector:
    app: expiration-redis
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: front-service
  namespace: ticketing
spec:
  ports:
  - name: front
    port: 3001
    protocol: TCP
    targetPort: 3001
  selector:
    app: front
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: nats-service
  namespace: ticketing
spec:
  ports:
  - name: client
    port: 4222
    protocol: TCP
    targetPort: 4222
  - name: monitoring
    port: 8222
    protocol: TCP
    targetPort: 8222
  selector:
    app: nats
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: orders-mongodb-service
  namespace: ticketing
spec:
  ports:
  - name: db
    port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: orders-mongodb
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: orders-service
  namespace: ticketing
spec:
  ports:
  - name: orders
    port: 3003
    protocol: TCP
    targetPort: 3003
  selector:
    app: orders
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: payments-mongodb-service
  namespace: ticketing
spec:
  ports:
  - name: db
    port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: payments-mongodb
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: payments-service
  namespace: ticketing
spec:
  ports:
  - name: payments
    port: 3004
    protocol: TCP
    targetPort: 3004
  selector:
    app: payments
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: tickets-mongodb-service
  namespace: ticketing
spec:
  ports:
  - name: db
    port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: tickets-mongodb
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: tickets-service
  namespace: ticketing
spec:
  ports:
  - name: tickets
    port: 3002
    protocol: TCP
    targetPort: 3002
  selector:
    app: tickets
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-deployment
  namespace: ticketing
spec:
  replicas: 2
  selector:
    matchLabels:
      app: auth
  template:
    metadata:
      labels:
        app: auth
      namespace: ticketing
    spec:
      containers:
      - env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              key: NODE_ENV
              name: common-configmap
        - name: CORS_ORIGIN
          valueFrom:
            configMapKeyRef:
              key: CORS_ORIGIN
              name: common-configmap
        - name: COOKIE_SESSION_DOMAIN
          valueFrom:
            configMapKeyRef:
              key: COOKIE_SESSION_DOMAIN
              name: common-configmap
        - name: MONGODB_URL
          valueFrom:
            secretKeyRef:
              key: MONGODB_URL
              name: auth-secret
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              key: JWT_SECRET
              name: common-secret
        image: rodarte/msnr-ta-auth-prod:cf7fc04
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /auth/health/healthz
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        name: auth
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /auth/health/healthz
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        startupProbe:
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 3000
          timeoutSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-mongodb-deployment
  namespace: ticketing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-mongodb
  template:
    metadata:
      labels:
        app: auth-mongodb
      namespace: ticketing
    spec:
      containers:
      - image: mongo:5.0
        name: auth-mongodb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: expiration-deployment
  namespace: ticketing
spec:
  replicas: 2
  selector:
    matchLabels:
      app: expiration
  template:
    metadata:
      labels:
        app: expiration
      namespace: ticketing
    spec:
      containers:
      - env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              key: NODE_ENV
              name: common-configmap
        - name: NATS_CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              key: NATS_CLUSTER_ID
              name: common-configmap
        - name: NATS_CLIENT_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NATS_SERVER_URL
          valueFrom:
            configMapKeyRef:
              key: NATS_SERVER_URL
              name: common-configmap
        - name: REDIS_HOST
          valueFrom:
            secretKeyRef:
              key: REDIS_HOST
              name: expiration-secret
        image: rodarte/msnr-ta-expiration-prod:2fe6e9e
        livenessProbe:
          exec:
            command:
            - node
            - /node/src/healthcheck.js
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 45
        name: expiration
        readinessProbe:
          exec:
            command:
            - node
            - /node/src/healthcheck.js
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 45
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: expiration-redis-deployment
  namespace: ticketing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: expiration-redis
  template:
    metadata:
      labels:
        app: expiration-redis
      namespace: ticketing
    spec:
      containers:
      - image: redis:7.0
        name: expiration-redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: front-deployment
  namespace: ticketing
spec:
  replicas: 2
  selector:
    matchLabels:
      app: front
  template:
    metadata:
      labels:
        app: front
      namespace: ticketing
    spec:
      containers:
      - env:
        - name: NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY
          valueFrom:
            configMapKeyRef:
              key: NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY
              name: front-configmap
        - name: NEXT_PUBLIC_ENV
          valueFrom:
            configMapKeyRef:
              key: NEXT_PUBLIC_ENV
              name: front-configmap
        - name: NEXT_PUBLIC_API_URL
          valueFrom:
            configMapKeyRef:
              key: NEXT_PUBLIC_API_URL
              name: front-configmap
        - name: AUTH_MICROSERVICE_NAME
          valueFrom:
            configMapKeyRef:
              key: AUTH_MICROSERVICE_NAME
              name: front-configmap
        - name: AUTH_MICROSERVICE_PORT
          valueFrom:
            configMapKeyRef:
              key: AUTH_MICROSERVICE_PORT
              name: front-configmap
        - name: TICKETS_MICROSERVICE_NAME
          valueFrom:
            configMapKeyRef:
              key: TICKETS_MICROSERVICE_NAME
              name: front-configmap
        - name: TICKETS_MICROSERVICE_PORT
          valueFrom:
            configMapKeyRef:
              key: TICKETS_MICROSERVICE_PORT
              name: front-configmap
        - name: ORDERS_MICROSERVICE_NAME
          valueFrom:
            configMapKeyRef:
              key: ORDERS_MICROSERVICE_NAME
              name: front-configmap
        - name: ORDERS_MICROSERVICE_PORT
          valueFrom:
            configMapKeyRef:
              key: ORDERS_MICROSERVICE_PORT
              name: front-configmap
        - name: PAYMENTS_MICROSERVICE_NAME
          valueFrom:
            configMapKeyRef:
              key: PAYMENTS_MICROSERVICE_NAME
              name: front-configmap
        - name: PAYMENTS_MICROSERVICE_PORT
          valueFrom:
            configMapKeyRef:
              key: PAYMENTS_MICROSERVICE_PORT
              name: front-configmap
        image: rodarte/msnr-ta-front-prod:2a58839
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/health/healthz
            port: 3001
            scheme: HTTP
          initialDelaySeconds: 40
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 20
        name: next
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/health/healthz
            port: 3001
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 20
        startupProbe:
          failureThreshold: 3
          initialDelaySeconds: 20
          periodSeconds: 15
          successThreshold: 1
          tcpSocket:
            port: 3001
          timeoutSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nats-deployment
  namespace: ticketing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nats
  template:
    metadata:
      labels:
        app: nats
      namespace: ticketing
    spec:
      containers:
      - args:
        - -p
        - "4222"
        - -m
        - "8222"
        - -hbi
        - 5s
        - -hbt
        - 5s
        - -hbf
        - "2"
        - -SD
        - -cid
        - ticketing
        image: nats-streaming:0.24.5
        name: nats
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders-deployment
  namespace: ticketing
spec:
  replicas: 2
  selector:
    matchLabels:
      app: orders
  template:
    metadata:
      labels:
        app: orders
      namespace: ticketing
    spec:
      containers:
      - env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              key: NODE_ENV
              name: common-configmap
        - name: CORS_ORIGIN
          valueFrom:
            configMapKeyRef:
              key: CORS_ORIGIN
              name: common-configmap
        - name: COOKIE_SESSION_DOMAIN
          valueFrom:
            configMapKeyRef:
              key: COOKIE_SESSION_DOMAIN
              name: common-configmap
        - name: NATS_CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              key: NATS_CLUSTER_ID
              name: common-configmap
        - name: NATS_CLIENT_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NATS_SERVER_URL
          valueFrom:
            configMapKeyRef:
              key: NATS_SERVER_URL
              name: common-configmap
        - name: EXPIRATION_WINDOW_SECONDS
          valueFrom:
            configMapKeyRef:
              key: EXPIRATION_WINDOW_SECONDS
              name: orders-configmap
        - name: MONGODB_URL
          valueFrom:
            secretKeyRef:
              key: MONGODB_URL
              name: orders-secret
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              key: JWT_SECRET
              name: common-secret
        image: rodarte/msnr-ta-orders-prod:cf7fc04
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /orders/health/healthz
            port: 3003
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        name: orders
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /orders/health/healthz
            port: 3003
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        startupProbe:
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 3003
          timeoutSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders-mongodb-deployment
  namespace: ticketing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orders-mongodb
  template:
    metadata:
      labels:
        app: orders-mongodb
      namespace: ticketing
    spec:
      containers:
      - image: mongo:5.0
        name: orders-mongodb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payments-deployment
  namespace: ticketing
spec:
  replicas: 2
  selector:
    matchLabels:
      app: payments
  template:
    metadata:
      labels:
        app: payments
      namespace: ticketing
    spec:
      containers:
      - env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              key: NODE_ENV
              name: common-configmap
        - name: CORS_ORIGIN
          valueFrom:
            configMapKeyRef:
              key: CORS_ORIGIN
              name: common-configmap
        - name: COOKIE_SESSION_DOMAIN
          valueFrom:
            configMapKeyRef:
              key: COOKIE_SESSION_DOMAIN
              name: common-configmap
        - name: NATS_CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              key: NATS_CLUSTER_ID
              name: common-configmap
        - name: NATS_CLIENT_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NATS_SERVER_URL
          valueFrom:
            configMapKeyRef:
              key: NATS_SERVER_URL
              name: common-configmap
        - name: MONGODB_URL
          valueFrom:
            secretKeyRef:
              key: MONGODB_URL
              name: payments-secret
        - name: STRIPE_API_KEY
          valueFrom:
            secretKeyRef:
              key: STRIPE_API_KEY
              name: payments-secret
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              key: JWT_SECRET
              name: common-secret
        image: rodarte/msnr-ta-payments-prod:cf7fc04
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /payments/health/healthz
            port: 3004
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        name: payments
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /payments/health/healthz
            port: 3004
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        startupProbe:
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 3004
          timeoutSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payments-mongodb-deployment
  namespace: ticketing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: payments-mongodb
  template:
    metadata:
      labels:
        app: payments-mongodb
      namespace: ticketing
    spec:
      containers:
      - image: mongo:5.0
        name: payments-mongodb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tickets-deployment
  namespace: ticketing
spec:
  replicas: 2
  selector:
    matchLabels:
      app: tickets
  template:
    metadata:
      labels:
        app: tickets
      namespace: ticketing
    spec:
      containers:
      - env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              key: NODE_ENV
              name: common-configmap
        - name: CORS_ORIGIN
          valueFrom:
            configMapKeyRef:
              key: CORS_ORIGIN
              name: common-configmap
        - name: COOKIE_SESSION_DOMAIN
          valueFrom:
            configMapKeyRef:
              key: COOKIE_SESSION_DOMAIN
              name: common-configmap
        - name: NATS_CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              key: NATS_CLUSTER_ID
              name: common-configmap
        - name: NATS_CLIENT_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NATS_SERVER_URL
          valueFrom:
            configMapKeyRef:
              key: NATS_SERVER_URL
              name: common-configmap
        - name: MONGODB_URL
          valueFrom:
            secretKeyRef:
              key: MONGODB_URL
              name: tickets-secret
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              key: JWT_SECRET
              name: common-secret
        image: rodarte/msnr-ta-tickets-prod:cf7fc04
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /tickets/health/healthz
            port: 3002
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        name: tickets
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /tickets/health/healthz
            port: 3002
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        startupProbe:
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 3002
          timeoutSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tickets-mongodb-deployment
  namespace: ticketing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tickets-mongodb
  template:
    metadata:
      labels:
        app: tickets-mongodb
      namespace: ticketing
    spec:
      containers:
      - image: mongo:5.0
        name: tickets-mongodb
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: auth-secret
  namespace: ticketing
spec:
  encryptedData:
    MONGODB_URL: AgBllDorhi9eHP3jcLVpRycMaIh4YpeVwfER0mzlKIwWBRbvzzC9oxHXeNLK1ZwKP6jqZy2ibn2oqo4JfT0JJSy7kORtMfAF6e4tOVLVQ4z/kwpawneehrcFPwj/TkFgzgH86Bfmz2KX3/7giR1a0oK4oKphC+fgM9eANrb0DOhykh0ZjLo3o7kPs8VhrVQDA8NBqdId3nqccjBktTyyaydRoGyZvQiDa0F35J9dPcME0Bo0bm8MrUGEYNs3CC9b+0oifU6t9TRiAW9uqhpRA7x5wVp0+5/zXFK1CZ1xbQ16xAofPKHmN4/UtEdmSGowrKg8UVY5ElYPaOtE/RumUaYF/Q3RFtm9HvGeF23EvRF/KWgQHWeLQqRQXXR2OP6m8V6qceK+neYmt/JktWOAJAFzTNZvSGbeNfTGmDyFR+PlexRbIP3YamEOgS53q75pNARovKFZ+sT09vMXJvdtkxDnmbZpeiMhNw8qRxNIaytPYZ8p53ZCHKyZkg32ufVWRz+NgQjqjijYadP/55YnQRLcMRo38yNxBcDWYfiJu3x8IC0eQIBN8FY7WMgS3dmFSx2P/H6JH8jiTgoxl1MBURCkCa+dtd2sQwT+i0f36xAduPmVeIvGlApLJhiaiOdIlZcnO7/aYpA87hhi2cExAca3RsgspkojojlK/NZxNcc1RX0iTk5TxFbIXGqiYYjb9dHMY8NjNboVjBMX8h3nUaB3uNQa5sT3a2aLZSPJIjZ2HKDBoU2qOdlZSXW1UXQUvSMZ
  template:
    metadata:
      name: auth-secret
      namespace: ticketing
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: common-secret
  namespace: ticketing
spec:
  encryptedData:
    JWT_SECRET: AgC466mdXYrsnSQPjO6h5DOXt3ArEe+rSK7eE+YHpwBWqvrR4cj7Iz5dJYg81DGQM6fwvIAYOvnmufXOReKGsfJyKOHqhjYyNw1U6EFSJ2KOWlUVXg5P5PxOEV6TY8R/GAIAPgZAmDev2JFJaO8aBnKeN9An9IojmXUdZZzpwdC6I1Pl3G9MmSXI1yCqn5AKTpmO0k+CIeuGyjtYWd0prvqJzXwKVN93Cf7BRjOm5HFtQkB4pHzciMXJgh3wYAabd8aJmi6LhYtlW4CLg37GdPzZf7JhNarT1tOABM2jwWHeh85fjFnOMnv7O0poycm2pBxbPZ2klR+d/culW2hpNn7FX+IRkKEn0QVvIvYgRQoWS9JFJPma8dvTjPln3KN2zopJc+q4CmKmXA69iuZ+06qRdyBvkAcxS6WcYpGZiijjGCaLrozXY0HaCmQrhLSk6ddRc8U9ofZbTCeVwg3HQpMdQADxezeyt5x/CLqshGsyeGC4XpO7mRlmANlkInTbYEvIl7F74jXiGesIFxne/u1DrTWzScCrWO8EJ7caXuy4eMagicyzy2lnDhXEEZj3wr0C5+4x/ZL7pP7K/QzAO9TMX2h1Ty9Ei7puCDAvJsMLe3zVGzFXtKdWkbUWMu2Sq/XOc747p09gwpyq+rWDZrxmsPUrYsdBp1GmAaiw3fxOoqts6+eSYlYJTgzUhq/8lpAbFiz7l+kiYEPHFwdXIqkYIiU1kx3cSjfvQ0eGPak=
  template:
    metadata:
      name: common-secret
      namespace: ticketing
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: expiration-secret
  namespace: ticketing
spec:
  encryptedData:
    REDIS_HOST: AgDbbeRTkc2cFSDQvnbP/UmuwMjfBFAlV/uIPr+04UjnrkBvBJRrtO5PBu3+GEwAIPzyVO+1zYldBlyt8LFeHN9NBN64+yf/bsTvATH0ALbmlQFpIVKxVQVBaZ6+rj9tzFrU1sbDn1LiOZf8/E+OQtPTKix9jXoYlyywVGpVQYG0GsbLUbJxevEmr/RaQaGz9pBFrcKDg2ILRTAKid0TXb/RpJfiC2SRnj5BNBIAPkVs8/b5D0ioqKGntjzMmOEGHEOVphAieiL4BOzE7Fagmialg02c7ryJ0DfVazDrnWhXuLyfcxYRSO3iKQPh9pqHVqejxyVm1Z3iCf5AZKdJAdepD8fwx8hn6djLoBGBCQk9Iee+Ag59TyafE9+TxrPUEWS4wOVhf+gk9Ig6HIiuJgelbZIw9OUsEOJa6myn48EuAQQVp9Lb7okGPr0hZn/7eK+VCEADjYO9rRDf7LZyj732ilBLd6EEJ+h6KmSwXgyOwe5Ef9KaCziEV6WtLekIzocZbPhG7yfC7IynftMkk0H8yPIuTN1K8Vorf4ZWASc2Y4sN5A/YZXhd6wDgyHJIlAfYqaXBiVhUK6pzrmUS4zFYqlV/H4tpuFi/kx9lPgbhLnVjkjMjaI6jiVEqmMvlpqnhnXWSSyUKNPsoydohl5EZZ7LRRryLjEFi8yT3EQ32PjCbuWwgyMRF780GnHF1TKr+pApPE907VBDJ265z9gVrNYMv6ll25bg=
  template:
    metadata:
      name: expiration-secret
      namespace: ticketing
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: orders-secret
  namespace: ticketing
spec:
  encryptedData:
    MONGODB_URL: AgDWCsGERTFRYW4dPPzuzP/iy5XP8dS3tIGxiX2DBh1AU/ZN0Lu1EmrkRaYwqJVXhnpaEnuANa5RtHDly/mQhmnl+NldN2N4GLK4V2NAvtaBLFqD1CziIVVfiDhR1jNfR73Zf6DBtqvQzP2q59TYzKfr0IOCcOAd5VxFk0ro8DOmN0odVYLwCxHy9oo/XHnNlkWRoPz2+DEUUrBkpNSsEA/cNayuVSgv06VsfEQ3Sd2bnn71uS+J5hN6wXZ0O2yeV/0ZZItITAvBmOrOdz46obVAb680PTu7N+avPXJKz3ECFVQBLnpv4RZBX57dT+7nbqHVYgviI8atyH9/BT2Wb/C49qz1I5RMYaOLqnTwt1QCMOzLoJAOzJAcIxFmDFR01iBYteWF7/g9NCP1W2I9O8KpNwjNfaJwz2+4RYEhmGHH93MNKp2xtXohoRolMTjfMsGRj7s/tZjZ3wJp8i04ouxqpxExsHoqACerKsxqAhZu6vfoxTYQkBozmt4B2Ra7bekz70JuNL2yHr/p+KyqGWffx+vA7g2cLNnI7R3CFGoqCzmzngcaclsvChuLduZlD/1bhI3phFMSQotlj7r8lyIhCLUH6oBcmUGFojVI28qYofjrfVb91cAI3GJCn4cTgbFAUwf+2ZaZnYMBn4bPB0GandmVk/WV+9xMwTw4uAEIgJ6E4/SKIY0aUPxxphfRSkw0Ld9H9x7TNk9ELdy1QhGRbD4rkI9xKkaDy/vipyYkTbc3TP/iePrBpOwg9Xt/lDJI5/oyLQ==
  template:
    metadata:
      name: orders-secret
      namespace: ticketing
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: payments-secret
  namespace: ticketing
spec:
  encryptedData:
    MONGODB_URL: AgBCLiLuGSftn68toVjdxxmPBUk6W0/Pc1SGB/LCAkroW2p/BQxclh5zETVnRC1VxToV+7j4hujSw7HzJ9PCVEKVLoHaq6UyCvLNpL7min57FscngzW2WtBp4UDfP8iRLbSmaxiUnxY70C4gQ+I2cUGU3vxwlM2ujr8k/m7w4XuoKc024zXk6cFlNOhelNfhYsp8cc4vIGa09Kcb18+fgo8k2C2bZcrP3o1vBQkCjXcT6Mx0NobKvVHZb8y3pDpRjODi2FEj1rzxZIJaelPNqQiZCQ1tSU2aLK80NsEqP4ZNC2M15t9QLdMgQUjDbzP21FUg8YQDzLbmj3Zy9/soiytg8J336h+J2sjbj7/NSTLgMfGIZQFIbKwpFb/qK1/WqPMCRkCfR3O6UajlOGXdK7KSv5PoUrl7c4BhvQRJc+3oUayMQltboXr86xz8nEZQKcqDTFn2RhU91zUxR4+1s88B89DojaXvn4nEBZvuTK3CFS+uP8kf4V2KhPiBzAamNjLmd0MjyC0M9iuuSUEsa4sB6Hd599vC343jX9FsDKBSRt8rxjVJ5uKcLrfCrhYIDK3VruCpe4JiYiRiGEm6F1AyK7L7Nc5TgE/r380X0da5ZmU0S3hQOuLv1Wypuez8d3xnqP7w83Jdv9Y7W3c/7WDHZ7D+O1aI6G6HUUcifTjco8adi365PUbyRKCheuaKQTbpNAs/JiKX9BUTOBaZuwyV4fl/AZzJzJQhsEvvGuG/yluVCL7yL9IXx1GUdV4zUGszdQ9/cprLqO0=
    STRIPE_API_KEY: AgA98kIlAVZiH1XK5+KvOHt222jRP8uRmR7cyC3BlIxHUuufrF+B+qGGowmjajB+N1ZvmNLVCoLNrspj7Y83wr92UvnIs1W1S4lBU6qVb4E8uxkx0c7OGqV33siSVT2mwjBwNwhmu95L/Vkw8lC2iCCFUrxUlRDqYwHhtYPsgT4eID9c9x8Czs1mDqDOBmx30UjYsHk6jHlR9T8Nnjtut7R+EJqZD9i5P8EA2fwXLzmhOOqyOHD5nrZZozA+v4ocUiRzlgPhOB53AjVxWB6WYNZj1wdZKRahygdL4JghKr22u3Db9Ds7m2GhKaimcNM2iqQQr62GVD7fAMD1LKPYUE2jSyMaBcZpTcXsVeexRhg5f2C8MDwY7dBD0228ft6Y/qNJtnnfWeH/z8/oaxlG5XuXPGpR+TGKjYbKE24pAWW/eqS04S+crpsipzZ034FA09VrczKQjO8Mul/L4H/pwLimgRR69HTeNmdni+i1Gmv0u7kJHzSJ6CW1pqrIxpGeT/RhnuBw1TtSX/tVsqNSHcdh+235fPeb/UZ6AscQzJgPCVgI2DG1xJ48E8kXGWSo5pJgWEXb1lA44nIbQGbi4NAwePU4b0CgvRNQJ3MqjECakJwS5oM9vzkctp7i6EKydCP8G8gHA5XsQ7QrSwCeqtOZHyJaxGPoWyEFkJcsde9x8v564igwNRUZC7gj5G3tV3A3VxDpX93H01jKjWNZ37juz3WFdr7r8W/hvgAie3rrWg1eeU4eS4rjVWI1TUX3jg/iTHblBhEbfMjUs5sGsE3hPDeC/Q7h+uhXp4wmOQlQ5oVTjCHza7rWMC3M0CJRrULVooGXtvzfa1NQGg==
  template:
    metadata:
      name: payments-secret
      namespace: ticketing
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: tickets-secret
  namespace: ticketing
spec:
  encryptedData:
    MONGODB_URL: AgCeIZff7cznpnS5fnsBr903nbSY22TkVF8pdkebvdCxLnKFFRXWPjq0VuPRlQZBf1Y3h3RytHsq1f7qfzdI+DaibOE78QMqyLrpkbU7/+XP14T11MxkTJgmLzX/FOCpUX+UX2IoXcum1C2aKZElgD2wSdo+s6nv+Cip73jOAO6zrhsUOwXACq4c0oiQFroGA7TCr4Io+qbiwhp4ZFySswA8kozxuOUtf15AN8+FleS5bsqDW6D0Emk0LVONNzCjKHIgPItsCoEF4oJt21xg4sjmF0yZAqEjsxOxRMY9sBURbHKw3LL9Mv4WHVn0wSKgA9T4ota/lmNFh35stWl2iqP1g70hpOMzMWGQgY7ygZlOKeSCT6omBvvAQXXLAQMYFgBnYvstn2+KGvsPfJIzXofVT0fI1qL75rKTKJ5hZa14OCiphrJT1UgVKfjzJ+td98aBmS//y7PdcHrdKSSXQw4rNxUuJEb2E+ifl8tTOljUOtqGJlRbQwvxjl5rifP2zsm/T+bNRCyrNU4UqBKyny19FC2H49zGpb4+VoJYagGB1U++B9h01SzIYvRqdu7vk2zzHV25GPSOGxnwczIGiNFfP9QOpInlcAySvga+akWszHBsMgRvECix/rn1wWTN9PaI31vH3BCzCV8LRJKJYD+gZ4zxp9346/XpDFmcHi6GuqgYZ4vPaLe4YXBRBDb/DAgI02uEb2R9fB149J1OguzqCFQpTDv4JTd8a0RStonRZL/KZtdgYLSG8wvvfCB9fHXU/s8qe/Hz
  template:
    metadata:
      name: tickets-secret
      namespace: ticketing
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
  name: ticketing-ingress
  namespace: ticketing
spec:
  rules:
  - host: ticketing-api.rodarte.tk
    http:
      paths:
      - backend:
          service:
            name: auth-service
            port:
              number: 3000
        path: /auth
        pathType: Prefix
      - backend:
          service:
            name: tickets-service
            port:
              number: 3002
        path: /tickets
        pathType: Prefix
      - backend:
          service:
            name: orders-service
            port:
              number: 3003
        path: /orders
        pathType: Prefix
      - backend:
          service:
            name: payments-service
            port:
              number: 3004
        path: /payments
        pathType: Prefix
  - host: ticketing.rodarte.tk
    http:
      paths:
      - backend:
          service:
            name: front-service
            port:
              number: 3001
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - ticketing.rodarte.tk
    - ticketing-api.rodarte.tk
    secretName: ticketing-tls

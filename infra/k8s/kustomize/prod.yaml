apiVersion: v1
kind: Namespace
metadata:
  name: ticketing
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: auth-configmap
  namespace: ticketing
---
apiVersion: v1
data:
  COOKIE_SESSION_DOMAIN: .10.64.140.43.nip.io
  CORS_ORIGIN: https://ticketing.10.64.140.43.nip.io
  FORCE_INSECURE_COOKIE: "true"
  NATS_CLUSTER_ID: ticketing
  NATS_SERVER_URL: http://nats-service:4222
  NODE_ENV: production
kind: ConfigMap
metadata:
  name: common-configmap
  namespace: ticketing
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: expiration-configmap
  namespace: ticketing
---
apiVersion: v1
data:
  AUTH_MICROSERVICE_NAME: auth-service
  AUTH_MICROSERVICE_PORT: "3000"
  NEXT_PUBLIC_API_URL: https://ticketing-api.10.64.140.43.nip.io
  NEXT_PUBLIC_ENV: production
  TICKETS_MICROSERVICE_NAME: tickets-service
  TICKETS_MICROSERVICE_PORT: "3002"
kind: ConfigMap
metadata:
  name: front-configmap
  namespace: ticketing
---
apiVersion: v1
data:
  EXPIRATION_WINDOW_SECONDS: "900"
kind: ConfigMap
metadata:
  name: orders-configmap
  namespace: ticketing
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: payments-configmap
  namespace: ticketing
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tickets-configmap
  namespace: ticketing
---
apiVersion: v1
kind: Service
metadata:
  name: auth-mongodb-service
  namespace: ticketing
spec:
  ports:
  - name: db
    port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: auth-mongodb
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: ticketing
spec:
  ports:
  - name: auth
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: auth
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: expiration-redis-service
  namespace: ticketing
spec:
  ports:
  - name: db
    port: 6379
    protocol: TCP
    targetPort: 6379
  selector:
    app: expiration-redis
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: front-service
  namespace: ticketing
spec:
  ports:
  - name: front
    port: 3001
    protocol: TCP
    targetPort: 3001
  selector:
    app: front
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: nats-service
  namespace: ticketing
spec:
  ports:
  - name: client
    port: 4222
    protocol: TCP
    targetPort: 4222
  - name: monitoring
    port: 8222
    protocol: TCP
    targetPort: 8222
  selector:
    app: nats
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: orders-mongodb-service
  namespace: ticketing
spec:
  ports:
  - name: db
    port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: orders-mongodb
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: orders-service
  namespace: ticketing
spec:
  ports:
  - name: orders
    port: 3003
    protocol: TCP
    targetPort: 3003
  selector:
    app: orders
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: payments-mongodb-service
  namespace: ticketing
spec:
  ports:
  - name: db
    port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: payments-mongodb
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: payments-service
  namespace: ticketing
spec:
  ports:
  - name: payments
    port: 3004
    protocol: TCP
    targetPort: 3004
  selector:
    app: payments
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: tickets-mongodb-service
  namespace: ticketing
spec:
  ports:
  - name: db
    port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: tickets-mongodb
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: tickets-service
  namespace: ticketing
spec:
  ports:
  - name: tickets
    port: 3002
    protocol: TCP
    targetPort: 3002
  selector:
    app: tickets
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-deployment
  namespace: ticketing
spec:
  replicas: 3
  selector:
    matchLabels:
      app: auth
  template:
    metadata:
      labels:
        app: auth
      namespace: ticketing
    spec:
      containers:
      - env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              key: NODE_ENV
              name: common-configmap
        - name: CORS_ORIGIN
          valueFrom:
            configMapKeyRef:
              key: CORS_ORIGIN
              name: common-configmap
        - name: COOKIE_SESSION_DOMAIN
          valueFrom:
            configMapKeyRef:
              key: COOKIE_SESSION_DOMAIN
              name: common-configmap
        - name: MONGODB_URL
          valueFrom:
            secretKeyRef:
              key: MONGODB_URL
              name: auth-secret
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              key: JWT_SECRET
              name: common-secret
        image: rodarte/msnr-ta-auth-prod:34f1d42
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /auth/health/healthz
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        name: auth
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /auth/health/healthz
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        startupProbe:
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 3000
          timeoutSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-mongodb-deployment
  namespace: ticketing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-mongodb
  template:
    metadata:
      labels:
        app: auth-mongodb
      namespace: ticketing
    spec:
      containers:
      - image: mongo:5.0
        name: auth-mongodb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: expiration-deployment
  namespace: ticketing
spec:
  replicas: 3
  selector:
    matchLabels:
      app: expiration
  template:
    metadata:
      labels:
        app: expiration
      namespace: ticketing
    spec:
      containers:
      - env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              key: NODE_ENV
              name: common-configmap
        - name: NATS_CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              key: NATS_CLUSTER_ID
              name: common-configmap
        - name: NATS_CLIENT_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NATS_SERVER_URL
          valueFrom:
            configMapKeyRef:
              key: NATS_SERVER_URL
              name: common-configmap
        - name: REDIS_HOST
          valueFrom:
            secretKeyRef:
              key: REDIS_HOST
              name: expiration-secret
        image: rodarte/msnr-ta-expiration-prod:2fe6e9e
        livenessProbe:
          exec:
            command:
            - node
            - /node/src/healthcheck.js
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 45
        name: expiration
        readinessProbe:
          exec:
            command:
            - node
            - /node/src/healthcheck.js
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 45
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: expiration-redis-deployment
  namespace: ticketing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: expiration-redis
  template:
    metadata:
      labels:
        app: expiration-redis
      namespace: ticketing
    spec:
      containers:
      - image: redis:7.0
        name: expiration-redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: front-deployment
  namespace: ticketing
spec:
  replicas: 3
  selector:
    matchLabels:
      app: front
  template:
    metadata:
      labels:
        app: front
      namespace: ticketing
    spec:
      containers:
      - env:
        - name: NEXT_PUBLIC_ENV
          valueFrom:
            configMapKeyRef:
              key: NEXT_PUBLIC_ENV
              name: front-configmap
        - name: NEXT_PUBLIC_API_URL
          valueFrom:
            configMapKeyRef:
              key: NEXT_PUBLIC_API_URL
              name: front-configmap
        - name: AUTH_MICROSERVICE_NAME
          valueFrom:
            configMapKeyRef:
              key: AUTH_MICROSERVICE_NAME
              name: front-configmap
        - name: AUTH_MICROSERVICE_PORT
          valueFrom:
            configMapKeyRef:
              key: AUTH_MICROSERVICE_PORT
              name: front-configmap
        image: rodarte/msnr-ta-front-prod:04398b2
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/health/healthz
            port: 3001
            scheme: HTTP
          initialDelaySeconds: 40
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 20
        name: next
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/health/healthz
            port: 3001
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 20
        startupProbe:
          failureThreshold: 3
          initialDelaySeconds: 20
          periodSeconds: 15
          successThreshold: 1
          tcpSocket:
            port: 3001
          timeoutSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nats-deployment
  namespace: ticketing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nats
  template:
    metadata:
      labels:
        app: nats
      namespace: ticketing
    spec:
      containers:
      - args:
        - -p
        - "4222"
        - -m
        - "8222"
        - -hbi
        - 5s
        - -hbt
        - 5s
        - -hbf
        - "2"
        - -SD
        - -cid
        - ticketing
        image: nats-streaming:0.24.5
        name: nats
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders-deployment
  namespace: ticketing
spec:
  replicas: 3
  selector:
    matchLabels:
      app: orders
  template:
    metadata:
      labels:
        app: orders
      namespace: ticketing
    spec:
      containers:
      - env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              key: NODE_ENV
              name: common-configmap
        - name: CORS_ORIGIN
          valueFrom:
            configMapKeyRef:
              key: CORS_ORIGIN
              name: common-configmap
        - name: COOKIE_SESSION_DOMAIN
          valueFrom:
            configMapKeyRef:
              key: COOKIE_SESSION_DOMAIN
              name: common-configmap
        - name: NATS_CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              key: NATS_CLUSTER_ID
              name: common-configmap
        - name: NATS_CLIENT_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NATS_SERVER_URL
          valueFrom:
            configMapKeyRef:
              key: NATS_SERVER_URL
              name: common-configmap
        - name: EXPIRATION_WINDOW_SECONDS
          valueFrom:
            configMapKeyRef:
              key: EXPIRATION_WINDOW_SECONDS
              name: orders-configmap
        - name: MONGODB_URL
          valueFrom:
            secretKeyRef:
              key: MONGODB_URL
              name: orders-secret
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              key: JWT_SECRET
              name: common-secret
        image: rodarte/msnr-ta-orders-prod:2fe6e9e
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /orders/health/healthz
            port: 3003
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        name: orders
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /orders/health/healthz
            port: 3003
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        startupProbe:
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 3003
          timeoutSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders-mongodb-deployment
  namespace: ticketing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orders-mongodb
  template:
    metadata:
      labels:
        app: orders-mongodb
      namespace: ticketing
    spec:
      containers:
      - image: mongo:5.0
        name: orders-mongodb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payments-deployment
  namespace: ticketing
spec:
  replicas: 3
  selector:
    matchLabels:
      app: payments
  template:
    metadata:
      labels:
        app: payments
      namespace: ticketing
    spec:
      containers:
      - env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              key: NODE_ENV
              name: common-configmap
        - name: CORS_ORIGIN
          valueFrom:
            configMapKeyRef:
              key: CORS_ORIGIN
              name: common-configmap
        - name: COOKIE_SESSION_DOMAIN
          valueFrom:
            configMapKeyRef:
              key: COOKIE_SESSION_DOMAIN
              name: common-configmap
        - name: NATS_CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              key: NATS_CLUSTER_ID
              name: common-configmap
        - name: NATS_CLIENT_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NATS_SERVER_URL
          valueFrom:
            configMapKeyRef:
              key: NATS_SERVER_URL
              name: common-configmap
        - name: MONGODB_URL
          valueFrom:
            secretKeyRef:
              key: MONGODB_URL
              name: payments-secret
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              key: JWT_SECRET
              name: common-secret
        image: rodarte/msnr-ta-payments-prod:250e673
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /payments/health/healthz
            port: 3004
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        name: payments
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /payments/health/healthz
            port: 3004
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        startupProbe:
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 3004
          timeoutSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payments-mongodb-deployment
  namespace: ticketing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: payments-mongodb
  template:
    metadata:
      labels:
        app: payments-mongodb
      namespace: ticketing
    spec:
      containers:
      - image: mongo:5.0
        name: payments-mongodb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tickets-deployment
  namespace: ticketing
spec:
  replicas: 3
  selector:
    matchLabels:
      app: tickets
  template:
    metadata:
      labels:
        app: tickets
      namespace: ticketing
    spec:
      containers:
      - env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              key: NODE_ENV
              name: common-configmap
        - name: CORS_ORIGIN
          valueFrom:
            configMapKeyRef:
              key: CORS_ORIGIN
              name: common-configmap
        - name: COOKIE_SESSION_DOMAIN
          valueFrom:
            configMapKeyRef:
              key: COOKIE_SESSION_DOMAIN
              name: common-configmap
        - name: NATS_CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              key: NATS_CLUSTER_ID
              name: common-configmap
        - name: NATS_CLIENT_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NATS_SERVER_URL
          valueFrom:
            configMapKeyRef:
              key: NATS_SERVER_URL
              name: common-configmap
        - name: MONGODB_URL
          valueFrom:
            secretKeyRef:
              key: MONGODB_URL
              name: tickets-secret
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              key: JWT_SECRET
              name: common-secret
        image: rodarte/msnr-ta-tickets-prod:250e673
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /tickets/health/healthz
            port: 3002
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        name: tickets
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /tickets/health/healthz
            port: 3002
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        startupProbe:
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 3002
          timeoutSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tickets-mongodb-deployment
  namespace: ticketing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tickets-mongodb
  template:
    metadata:
      labels:
        app: tickets-mongodb
      namespace: ticketing
    spec:
      containers:
      - image: mongo:5.0
        name: tickets-mongodb
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: auth-secret
  namespace: ticketing
spec:
  encryptedData:
    MONGODB_URL: AgApHTmSwsPRpYwRG34wnXonRlyBA3xH/DTkiySy72pZY9l+o+cqCSU28Rgo2a1AhNAEr2lihaPsZZu8v7eYM5SI2xkSvAnNklkuqwloUTSls1euIRe5fD9IFBMkyQyCkuS8zQ1e/lRp+fsM/gZ7/qTznY/PELPf/luMaPDIg4PAXD9zccu9hQYjRB6TAC6fq/flNVBAqmolJWn1LZApWoBxC6nc91iPp6ia9/5pwYWsgbSf/++maaznyYcRWIgRYCZ2A9JiWnvdwy7zYXC7y3yu0fet/As72enb6Jkq99brDQrGEpXFXgelrc6tQFATeFDbj9g5g22YaWz5LK5ys4lWAR2ABypxDN+e6T+a7Kf+lcHxSdPTjYQWflzv/+ru1+igWiGg6IDsysewZgbwszJ8f5s/ohY6vpmjItHiXbhjy7zsx3Qh256IexyUV0lpNAK7nf2btsrI+ep37LPBjZDoAvoDlGu8zi3cmRsb+khL49T8J6a9EpmxQRY1imqOUgeJQ8HlfJByCmTcF42bodnorDehiZfuecy5hl6Lx64YnLG/HpxzSLRitseUxCtJIuvwRCIa2WeXLPsvIOXS7+O9v6VBafqivrCOyqR82P9i1khcVUTJDW2F++mQlj5VSVijLOHiXn8gC+njBC+ZUFINNxm3gyKfNR5AuxU6SB2AHMmQclPfnPlM5hnuvwtConU4fnpLN0a30Dg3Ywwab3TSvFkyWJSH0mA+apuuEqF13GnGGG31R1MAb+c9cK2oRSFl
  template:
    metadata:
      name: auth-secret
      namespace: ticketing
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: common-secret
  namespace: ticketing
spec:
  encryptedData:
    JWT_SECRET: AgB5HYnm9Q5su7WAEJJGdxEw9lsB8VpOWl+xWr5DrngA3GjukgMWEUSdlqkyDSUB94MfICi4mCQ0wbOgqF3ThPrbI7yDZ90cZT/lXXoFCuPRIPm5hCFdW/rI4plgoSBXJcCFsaPjbgYrvfThSP/Gvw2vFdODpBAqb6Kv/yBf4Q8aRhPSlDzNGxtzSu/ER72XA6RngH0PN3yi57SJbbswIFyhqbO6gy9fMr04N/Q0VYzlAAyCh6eaG8w6n8V5CspNWfWevmMJnZqOT2VWQCH7T7CWPS2z8Wr1Tm3pGTFIaur994MtWcgeRCeRtFZoaLpXjgduHfchzbQbItD/PntzpHcSwV2v50CJvKq3OYDTaApWezt+GWMv1VuGccExGrl4LS2mZDhk/U31KewXW+V1CgYiE/pjpbWdGC8huaYUWAqtAvdrVo+/BRR1av8mY4zJVGl8X/qqdW6aENSuWqGoNDcrcXAT09o1os/NtONLp48/EnSpwi+lHziek8EeF5xSJoYps05w+PqqswXedDD2TsriImaV1R+tSEXSFOeKqAj2sW7mM6PBA7hxs9HRHZzRWItKqP4t06EuSD0q1OR8XZgAQnFFuYGxh7D4tB57oHJOUzTzpLAsRP1k5l649LwMQELRwCjQmv5tFcxymx9HlERTpUscPo6PM8xvs4rSk/B/MOUW85lHTaqdZ8vqIiuw72SdTFuIQmrrx69C/WvtLQywbZQRqYBNLDlgnAuFpe4=
  template:
    metadata:
      name: common-secret
      namespace: ticketing
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: expiration-secret
  namespace: ticketing
spec:
  encryptedData:
    REDIS_HOST: AgAmnkzgTHovouhnjW056eeLVrBqDFcCsYGotSnYSBOIhjceJfe2u3hnXgKjTJm/mIiqsNKXbRGeg4BBASIlpQSndNB4LkothFyG4cnrBCUT0wDD6gtPFFRuh3UERJIiFLAkloyvchyYBhWXE2foC9zi23PcMq/11TCsRikAfQL9w5QQadzxmpU3x8Zlc3AcT4QGe2fcomxGnt3FJ8eA7ayRJn8lTICuJmGrNQ2gOkqk0pnnQi8kgztuRsasFEVGwufmllGV+pVoln6cwakzwbsH15BKImQOO9p9k/G/RgaUA/89RnwDeV5RtAUQ/FqVgUUYHsibvdKy7jHkNnmB/1/L5zKbom3lFAB8TsP+0fOmYWpjZTTpoJmLj7If7kld5NEbRU7vI8pwGmLyVzvwfBlfMi8H1p1yO3XsqRVpWf4VlTJhEpfsmKTCupHEmXE7vNsEeOBHgq9r+4D+9iR1+njL1gbeiFo9XyKPALUperxHvcFhiLUOHP3QK5Mi8UY6aipGq5qFaZTMJksaoM0UISyAkTPao/famRYirxyZbH+WL8msQyga0IoGBv96SCGXcarzRUjDAKX3VGpb3r1Prkdo6sIbfbUlDzeHB5cccpLpGtI513wFFgdA5An+NjH3FJYn1+dSZzKgONFdqW9t48jzyuJ6dkAi9CkVftJsFRwFHfMnMzqlsh//+woVwhV8PvSyyxHOwcgXJZF1CUsSF3wU75giaNvAw8k=
  template:
    metadata:
      name: expiration-secret
      namespace: ticketing
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: orders-secret
  namespace: ticketing
spec:
  encryptedData:
    MONGODB_URL: AgBetZt55k+4FlqxC5hiYksmoHXfVPsV1+VgJ3zKTjxZO4oSzufEe6kPFdR+Ml0XhpuO9gd0anNCdls07IYe49RCFHb4EK+36A2rbWXR5pFvnSy/mTGGPXL8dEyHiAqTyf35hajl57W0KHiy9OVeSVtVa93hv2XEdapIqZ1DQcxryC5vsgsmaOuoyGxGQwwOSN8WPuRRTE5h+m3oWgbi3B7b0u1ofWGhlH4L73iAPmr0eIvSuSpz9duF7VZKKxmjqGxwG3pmRd867n73B9zW5xPwuq0JJs9I6xSzVg9kIikO4RZJIHtw+hD7s2ymzz4SV10ymI3IK33vxgiNnnI5cAIl7xndcarpavcT2yFCkbZKFmb4mDeHjsOQDRcuuEQnF9Z8XHOqgmH5vEK2886NRslJUonnK/SnJNACII74xRLFjJnNoXeu4dlEDc9rZyyktpi01hOmO5fcRsmTkRzHu/ZRY0AST3WlW19q4kU9wyiXRb/8y6TOzRIQ7exhVIxh7d6Ykljl0+8+uGLJEuyW2pIMwdBImSodwyrq9BBkoEQv9cH2B4o2QqUDLNY9hAkTam2ceogYCmYDTCrHPqehC3L3uH0DTe6AXygv57IR/ccbK7WEF74PXjcjL7P9WH71yws0DWbb8TCbT8V1WvzkASaA05EOVQ4Za6cI9Dt7vD03pWoYiAcHFVFxcdroXPLNFFo2bHF78mSQWoCZE8pX7EXi1QoNEerMQNY1AtMdxlEFoSZeLPxkBAo4a1/xzWGI9SE1TKsZ9A==
  template:
    metadata:
      name: orders-secret
      namespace: ticketing
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: payments-secret
  namespace: ticketing
spec:
  encryptedData:
    MONGODB_URL: AgCw63JNRjV54wI10IpaFLUoqvswM2YPcW5pfGczFt0jgpGQwSb4TfbHMTwBRffRDugIEZS1JWcMFAK+Tb/cEWYKCrdjsGWDgZ7OMxmHhIEMEmtvY8ED5EFlbKPSC/SLH0M5sU2an7z0osCxmoyICtXMG4+X5xDINayQMLnL/P7Rcfetln2gVXOfIc4gzbcTleI861bQYpd/ept/tX1AucRZOL5MSIUbIrZROiHF7o11AIvQz5ZfLnLFX7rSQzKhOYZWkemfX6brmlrqh3BeE2WN6bMvXSjBC4EJT4UDmOKy5MGNc+RafdIsO3xKGhJeEWsJvRCi5pdWrNYWfgq0ZgbOlG8HjLFVrxPR3upLD7PnYVtZzpRfR4134DVFS50otJff5wNFoTmrs3aJUPIHrUiTYniOGTtZVR1A9JqyQtokE06Jf7iXY/crEzzVcLZScxVXpwjY8/H5DnHkxUO9KDILzuBKYZ426E/il0E0vCVQNNBCuLojhvjyi5eiflSaviqhPU0tAeu5EV4m0KmHfIplQeRQLfD9AOOn6uy/EXGxYCEtDedCbFBIo2yFmW9zGNyHq7jen60I9Vx3F/dJt3kCl6s307RrKR5tRBVHNu/D0hXy5IZ6EYiO5Fs/V43teqvS8PKKPwxdAdSNnwlLD8G4I2+dKQRq0KWKHDHveYS9y3v1NRn4Fn3R/tJvGfr5iwkI6sZhgvhpaXrhKUt5SG0JNwczsC2dDYWGOJDgh6HZZak4vHxZ4kSCAFzaHpHGEGnO2zRqrQ4XM2M=
  template:
    metadata:
      name: payments-secret
      namespace: ticketing
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: tickets-secret
  namespace: ticketing
spec:
  encryptedData:
    MONGODB_URL: AgCX8K8sWTcUar/IGX0K90UlxfIPk2Uj6aM8P6ZLwQF8oDihkNL1/0BUG5cx/aIGEa0FoafQilDFAwQwPbMyhiNhypNXVubvUyt/qNLR/M0QIdrAfn53+OB5NZf1i79k/fW79A5AAF5Z9CwzzOSVcj3eSHmWVhQjfwOwkkqjpSQ2XVA9TyvURDh2efy3UqNlsqbhqGxblAITGMYA2ANv+8mB2+b0VwdN9m226gEoR1zI2wP/AjHbAZUmzZ66+PT635fWHny5of9+BFE11QkhvzmHc2ecfELr1lwEBEAEIT4GW7CjUV52r2wlVr8FK+ciKEcKYKHO/FqJH6Z59WPzq03ZjP7xaDoUWWZUi1MADFJ3luXr0u/wUd3riZzg8555HnKZekCJhmDRDYiefPimRnxUR9mimlhRsotl/JbrkyxdhVih5JoHldbcWuKuNqK3w3HksF6NBW32MF4G4zwvyqkZuzPqpo9I2PPE2UsKjZeBz6hgT7/cNiKYKV1v8rZbRaLNfI3EwxlQ1TUllcvACnlQL5GB2TR3eJN+/DXngdV0E2iYa730y5/NjVWG2XPaY3/QcipwRuM8lIdfWYjLBjxwkNW6Rchw3Rik5dgFf2yaIdUoefnyumqGgeR/ZXPXrx+1fdb7KnV+d7299xHDuF+mvJIKyfAV7GO5CC2eZvFiki0IVkjdvxfkQ/V4cqz0gFv1GvhgxAXY6w/yPFQ9ebCSi4F7QE3gSHlXidXloPtFgi8VCp5bp1WWsmTItMqB1iYu5X3piEFK
  template:
    metadata:
      name: tickets-secret
      namespace: ticketing
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ticketing-ingress
  namespace: ticketing
spec:
  ingressClassName: public
  rules:
  - host: ticketing-api.10.64.140.43.nip.io
    http:
      paths:
      - backend:
          service:
            name: auth-service
            port:
              number: 3000
        path: /auth
        pathType: Prefix
      - backend:
          service:
            name: tickets-service
            port:
              number: 3002
        path: /tickets
        pathType: Prefix
      - backend:
          service:
            name: orders-service
            port:
              number: 3003
        path: /orders
        pathType: Prefix
      - backend:
          service:
            name: payments-service
            port:
              number: 3004
        path: /payments
        pathType: Prefix
  - host: ticketing.10.64.140.43.nip.io
    http:
      paths:
      - backend:
          service:
            name: front-service
            port:
              number: 3001
        path: /
        pathType: Prefix

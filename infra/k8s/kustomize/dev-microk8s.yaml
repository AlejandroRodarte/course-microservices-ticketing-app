apiVersion: v1
kind: Namespace
metadata:
  name: ticketing
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: auth-configmap
  namespace: ticketing
---
apiVersion: v1
data:
  COOKIE_SESSION_DOMAIN: .10.64.140.43.nip.io
  CORS_ORIGIN: https://ticketing.10.64.140.43.nip.io
  FORCE_INSECURE_COOKIE: "true"
  NATS_CLUSTER_ID: ticketing
  NATS_SERVER_URL: http://nats-service:4222
  NODE_ENV: development-microk8s
kind: ConfigMap
metadata:
  name: common-configmap
  namespace: ticketing
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: expiration-configmap
  namespace: ticketing
---
apiVersion: v1
data:
  AUTH_MICROSERVICE_NAME: auth-service
  AUTH_MICROSERVICE_PORT: "3000"
  NEXT_PUBLIC_API_URL: https://ticketing-api.10.64.140.43.nip.io
  NEXT_PUBLIC_ENV: development-microk8s
  TICKETS_MICROSERVICE_NAME: tickets-service
  TICKETS_MICROSERVICE_PORT: "3002"
kind: ConfigMap
metadata:
  name: front-configmap
  namespace: ticketing
---
apiVersion: v1
data:
  EXPIRATION_WINDOW_SECONDS: "900"
kind: ConfigMap
metadata:
  name: orders-configmap
  namespace: ticketing
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: payments-configmap
  namespace: ticketing
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tickets-configmap
  namespace: ticketing
---
apiVersion: v1
kind: Service
metadata:
  name: auth-mongodb-service
  namespace: ticketing
spec:
  ports:
  - name: db
    port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: auth-mongodb
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: ticketing
spec:
  ports:
  - name: auth
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: auth
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: expiration-redis-service
  namespace: ticketing
spec:
  ports:
  - name: db
    port: 6379
    protocol: TCP
    targetPort: 6379
  selector:
    app: expiration-redis
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: front-service
  namespace: ticketing
spec:
  ports:
  - name: front
    port: 3001
    protocol: TCP
    targetPort: 3001
  selector:
    app: front
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: nats-service
  namespace: ticketing
spec:
  ports:
  - name: client
    port: 4222
    protocol: TCP
    targetPort: 4222
  - name: monitoring
    port: 8222
    protocol: TCP
    targetPort: 8222
  selector:
    app: nats
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: orders-mongodb-service
  namespace: ticketing
spec:
  ports:
  - name: db
    port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: orders-mongodb
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: orders-service
  namespace: ticketing
spec:
  ports:
  - name: orders
    port: 3003
    protocol: TCP
    targetPort: 3003
  selector:
    app: orders
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: payments-mongodb-service
  namespace: ticketing
spec:
  ports:
  - name: db
    port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: payments-mongodb
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: payments-service
  namespace: ticketing
spec:
  ports:
  - name: payments
    port: 3004
    protocol: TCP
    targetPort: 3004
  selector:
    app: payments
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: tickets-mongodb-service
  namespace: ticketing
spec:
  ports:
  - name: db
    port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: tickets-mongodb
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: tickets-service
  namespace: ticketing
spec:
  ports:
  - name: tickets
    port: 3002
    protocol: TCP
    targetPort: 3002
  selector:
    app: tickets
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-deployment
  namespace: ticketing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth
  template:
    metadata:
      labels:
        app: auth
      namespace: ticketing
    spec:
      containers:
      - env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              key: NODE_ENV
              name: common-configmap
        - name: CORS_ORIGIN
          valueFrom:
            configMapKeyRef:
              key: CORS_ORIGIN
              name: common-configmap
        - name: COOKIE_SESSION_DOMAIN
          valueFrom:
            configMapKeyRef:
              key: COOKIE_SESSION_DOMAIN
              name: common-configmap
        - name: MONGODB_URL
          valueFrom:
            secretKeyRef:
              key: MONGODB_URL
              name: auth-secret
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              key: JWT_SECRET
              name: common-secret
        image: localhost:32000/msnr-ta-auth-skaffold
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /auth/health/healthz
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 40
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        name: auth
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /auth/health/healthz
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        startupProbe:
          failureThreshold: 5
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 3000
          timeoutSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-mongodb-deployment
  namespace: ticketing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-mongodb
  template:
    metadata:
      labels:
        app: auth-mongodb
      namespace: ticketing
    spec:
      containers:
      - image: mongo:latest
        name: auth-mongodb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: expiration-deployment
  namespace: ticketing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: expiration
  template:
    metadata:
      labels:
        app: expiration
      namespace: ticketing
    spec:
      containers:
      - env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              key: NODE_ENV
              name: common-configmap
        - name: NATS_CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              key: NATS_CLUSTER_ID
              name: common-configmap
        - name: NATS_CLIENT_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NATS_SERVER_URL
          valueFrom:
            configMapKeyRef:
              key: NATS_SERVER_URL
              name: common-configmap
        - name: REDIS_HOST
          valueFrom:
            secretKeyRef:
              key: REDIS_HOST
              name: expiration-secret
        image: localhost:32000/msnr-ta-expiration-skaffold
        livenessProbe:
          exec:
            command:
            - ts-node
            - /node/src/healthcheck.ts
          failureThreshold: 5
          initialDelaySeconds: 45
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 45
        name: expiration
        readinessProbe:
          exec:
            command:
            - ts-node
            - /node/src/healthcheck.ts
          failureThreshold: 5
          initialDelaySeconds: 45
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 45
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: expiration-redis-deployment
  namespace: ticketing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: expiration-redis
  template:
    metadata:
      labels:
        app: expiration-redis
      namespace: ticketing
    spec:
      containers:
      - image: redis:latest
        name: expiration-redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: front-deployment
  namespace: ticketing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: front
  template:
    metadata:
      labels:
        app: front
      namespace: ticketing
    spec:
      containers:
      - env:
        - name: NEXT_PUBLIC_ENV
          valueFrom:
            configMapKeyRef:
              key: NEXT_PUBLIC_ENV
              name: front-configmap
        - name: NEXT_PUBLIC_API_URL
          valueFrom:
            configMapKeyRef:
              key: NEXT_PUBLIC_API_URL
              name: front-configmap
        - name: AUTH_MICROSERVICE_NAME
          valueFrom:
            configMapKeyRef:
              key: AUTH_MICROSERVICE_NAME
              name: front-configmap
        - name: AUTH_MICROSERVICE_PORT
          valueFrom:
            configMapKeyRef:
              key: AUTH_MICROSERVICE_PORT
              name: front-configmap
        image: localhost:32000/msnr-ta-front-skaffold
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /api/health/healthz
            port: 3001
            scheme: HTTP
          initialDelaySeconds: 50
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 20
        name: next
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /api/health/healthz
            port: 3001
            scheme: HTTP
          initialDelaySeconds: 40
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 20
        startupProbe:
          failureThreshold: 5
          initialDelaySeconds: 30
          periodSeconds: 15
          successThreshold: 1
          tcpSocket:
            port: 3001
          timeoutSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nats-deployment
  namespace: ticketing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nats
  template:
    metadata:
      labels:
        app: nats
      namespace: ticketing
    spec:
      containers:
      - args:
        - -p
        - "4222"
        - -m
        - "8222"
        - -hbi
        - 5s
        - -hbt
        - 5s
        - -hbf
        - "2"
        - -SD
        - -cid
        - ticketing
        image: nats-streaming:0.24.5
        name: nats
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders-deployment
  namespace: ticketing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orders
  template:
    metadata:
      labels:
        app: orders
      namespace: ticketing
    spec:
      containers:
      - env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              key: NODE_ENV
              name: common-configmap
        - name: CORS_ORIGIN
          valueFrom:
            configMapKeyRef:
              key: CORS_ORIGIN
              name: common-configmap
        - name: COOKIE_SESSION_DOMAIN
          valueFrom:
            configMapKeyRef:
              key: COOKIE_SESSION_DOMAIN
              name: common-configmap
        - name: NATS_CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              key: NATS_CLUSTER_ID
              name: common-configmap
        - name: NATS_CLIENT_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NATS_SERVER_URL
          valueFrom:
            configMapKeyRef:
              key: NATS_SERVER_URL
              name: common-configmap
        - name: EXPIRATION_WINDOW_SECONDS
          valueFrom:
            configMapKeyRef:
              key: EXPIRATION_WINDOW_SECONDS
              name: orders-configmap
        - name: MONGODB_URL
          valueFrom:
            secretKeyRef:
              key: MONGODB_URL
              name: orders-secret
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              key: JWT_SECRET
              name: common-secret
        image: localhost:32000/msnr-ta-orders-skaffold
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /orders/health/healthz
            port: 3003
            scheme: HTTP
          initialDelaySeconds: 40
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        name: orders
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /orders/health/healthz
            port: 3003
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        startupProbe:
          failureThreshold: 5
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 3003
          timeoutSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders-mongodb-deployment
  namespace: ticketing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orders-mongodb
  template:
    metadata:
      labels:
        app: orders-mongodb
      namespace: ticketing
    spec:
      containers:
      - image: mongo:latest
        name: orders-mongodb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payments-deployment
  namespace: ticketing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: payments
  template:
    metadata:
      labels:
        app: payments
      namespace: ticketing
    spec:
      containers:
      - env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              key: NODE_ENV
              name: common-configmap
        - name: CORS_ORIGIN
          valueFrom:
            configMapKeyRef:
              key: CORS_ORIGIN
              name: common-configmap
        - name: COOKIE_SESSION_DOMAIN
          valueFrom:
            configMapKeyRef:
              key: COOKIE_SESSION_DOMAIN
              name: common-configmap
        - name: NATS_CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              key: NATS_CLUSTER_ID
              name: common-configmap
        - name: NATS_CLIENT_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NATS_SERVER_URL
          valueFrom:
            configMapKeyRef:
              key: NATS_SERVER_URL
              name: common-configmap
        - name: MONGODB_URL
          valueFrom:
            secretKeyRef:
              key: MONGODB_URL
              name: payments-secret
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              key: JWT_SECRET
              name: common-secret
        image: localhost:32000/msnr-ta-payments-skaffold
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /payments/health/healthz
            port: 3004
            scheme: HTTP
          initialDelaySeconds: 40
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        name: payments
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /payments/health/healthz
            port: 3004
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        startupProbe:
          failureThreshold: 5
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 3004
          timeoutSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payments-mongodb-deployment
  namespace: ticketing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: payments-mongodb
  template:
    metadata:
      labels:
        app: payments-mongodb
      namespace: ticketing
    spec:
      containers:
      - image: mongo:latest
        name: payments-mongodb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tickets-deployment
  namespace: ticketing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tickets
  template:
    metadata:
      labels:
        app: tickets
      namespace: ticketing
    spec:
      containers:
      - env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              key: NODE_ENV
              name: common-configmap
        - name: CORS_ORIGIN
          valueFrom:
            configMapKeyRef:
              key: CORS_ORIGIN
              name: common-configmap
        - name: COOKIE_SESSION_DOMAIN
          valueFrom:
            configMapKeyRef:
              key: COOKIE_SESSION_DOMAIN
              name: common-configmap
        - name: NATS_CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              key: NATS_CLUSTER_ID
              name: common-configmap
        - name: NATS_CLIENT_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NATS_SERVER_URL
          valueFrom:
            configMapKeyRef:
              key: NATS_SERVER_URL
              name: common-configmap
        - name: MONGODB_URL
          valueFrom:
            secretKeyRef:
              key: MONGODB_URL
              name: tickets-secret
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              key: JWT_SECRET
              name: common-secret
        image: localhost:32000/msnr-ta-tickets-skaffold
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /tickets/health/healthz
            port: 3002
            scheme: HTTP
          initialDelaySeconds: 40
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        name: tickets
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /tickets/health/healthz
            port: 3002
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        startupProbe:
          failureThreshold: 5
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 3002
          timeoutSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tickets-mongodb-deployment
  namespace: ticketing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tickets-mongodb
  template:
    metadata:
      labels:
        app: tickets-mongodb
      namespace: ticketing
    spec:
      containers:
      - image: mongo:latest
        name: tickets-mongodb
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: auth-secret
  namespace: ticketing
spec:
  encryptedData:
    MONGODB_URL: AgCSiC9a1bgq8Ev0i+vYuyUfZ7y6uuXKXmUnN7ezWSKULLfj/BJdz8BuJyvfVJQ6yMQQnW7n6VL0H4Irkxzciy1GK9LeltyZPXliW4stVC5T5NMlwcolrLm7T9m/O39drbQMIxtZuGkak2uvM3cR9KLeV9/L1dgAQYpUz9Ks0gTIAGSLLpvGKtKGyNyv+K5Xtp7yuU4QYpZqlUS2UpCoXDdAs+05tSZDEG65Gqc8YB4aKx+oyON08gamswfB/SG1/REd18+vgTTwoGQiQfDlmBX4zH2Tg8ENhScOEOtpQUDzTuIifHfzioGvfDvUTJeWfKtuF3ob86WExC+D8BAQpoWDCqxlueIy0WgqezM4rAtQHdADYgIQjbkbbdvETF/POtwl8uAJTN4zo3q3KEo3T/NqqjQUFYYq5bdGHzsy0xqMqEsUr1tMHBlO97Tjd+/+NnNXjLbl8/gQnybtLaXN8IvjQUCJN29BS0gSTmlNfi1J3YSYAn5Tur+CEClDzFkliftO2RxeB43rKeOZ8SOUEEeg1ecil8sF7PtI3F8fwzOe4AcKiQgH9/TpOEMwfe1h9d1M1g0Z5xtsIqPYInBfcim+JXt5OK71F+qpOB5WSIksoW5TT+eLYIM8Y0NE/VPori+C9aRvDy/5FVhMsNwhhm/yO5msaMFc26Roi7e4nVSA/Hdi6CsdFmjqICHSUMwUQdR0z/0P64tXEcQb0C5/YcJcitEDSoXe39O8dTQpv9r26bIgFqiE/2INa4RVPfkvpcrW
  template:
    metadata:
      name: auth-secret
      namespace: ticketing
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: common-secret
  namespace: ticketing
spec:
  encryptedData:
    JWT_SECRET: AgChq4iG3mg/GNecWr9NzSoQkoYhv5E+OiM4gYXWqGlYGOefEl28wozXmHrKiBzfLo1O+0tOT2CJiC5L9Ys2kCbgQXxi2bKC7tVD8IOaI+dpV4WUTRr/UW8qT5eQtOdy/ScWFF533z2El+P7gClIaEfgVmOikWR72nSCkidcll5UgGuSJUcdtS8d4jA7wfxCQWrczHSn+u5jLKw+5+3QSXCvA/L5FvD5Ky6sQrLoBTNbtxnyl5GRvWXBVJb/tO/9f5aCII5PIvlEAapGnBGGPY8mzuu9gOWZmWhVs4MVTrAbh73lEpvavkCbqtnIn/DGi1nFilN440FnZqXO+xTd0hbnDUojIZjN2jDsDDl6HaFwPfredeDf3c8gWxrgGOzNhM5ImG8zJa229K3atc3XxNuHZ4bZCqscDHYr5OT6pd1OcntyfdJM62o9L4MYaZhxdi81lJyB5AqlErwppBdVuhN0kA0ny2J0OblqYW4/XpHQWO8rmY8//YTXwvy1YR//yN05GBHma+7P1fy+MwqrEdt9p3AHQAnazFIQAV+I64f7hTxW4Rgs79NowbGRWKLecPgex3HqFgZBhA63B9FcdfArk1i4zNdvDHVUqM+Z/mbxc30YUTnxA4S07ap9U2WnGxf876Qc63408CDrgT+FLySfwk0NmdYXkEYC11XqG+mMFyE6a6us2mPzlg/Hp/1+jQYTzXRM5RPKftxkWWKawqBC8mA0HXI3+NgaiyTt4LM=
  template:
    metadata:
      name: common-secret
      namespace: ticketing
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: expiration-secret
  namespace: ticketing
spec:
  encryptedData:
    REDIS_HOST: AgCJNkHwJ8/lOAaygkVTDvK+gqFYeoSnwREdi8EdQzdU5ix1x3UsHg3ohsQTbPrGRLYC9z26v5NGvZldvFHVD7F7qhKFw6cQvQWRf/fsVQrkAvFdzK7AvCAHdNHtu1JUIo9oMbi9KyttMMkJJIckMY+fH17YWdextccnAF4mK597dgtaVQ/UjopfBAgOH8RSUqb6yKQR0W2A9HO/JXNqrx9+gHNKlqLFDUYbqI4x0ozAvIfcf9vJjNetjYW2mB7p7uEtwvV9EN3jGx9UKAoDn39suHPZS8RGgCzXOzU74m4IdkmQK9VTzlr746iZJE6bADVIRzGIZ05Yi+95ITOTeYdESStUhPxolgFHeaslYGIWcbpOA0riu98mVTl+fAfNrN1QJlRwhv8OUUxtEYYrvR9OYca0pTvW/PaUUmSaaG2uzCrvWuDHS67/HQzeYvz18b74T2Y5Pjb7/qnANcWO9caGEFmaRyohyAkowi3A336H42Ag8HSfDGwfms9tOG5R5PZ/1fXVqID5ATWQQinUh1d+dtW8xLlc3nQ+yAoufY/sx3eEmPdSACbU1v8kDdmzyyZXgGncJg6rokKKX2c9ySXGq3fVzT0/r8JspljKMVEFsuPhqLskeGusR6/CSNkdcTdB9F7E6t+45NONsrI3iyHXT8uIHziklEAsqO2tL7Sa1Jp7w2UzL6pM44cUAipdELqd8LwF5HPgcwX8nip0KDBZxV/dWaPDETY=
  template:
    metadata:
      name: expiration-secret
      namespace: ticketing
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: orders-secret
  namespace: ticketing
spec:
  encryptedData:
    MONGODB_URL: AgCpc2wQlHesBDLAJlJn+wEbccerjFUyEhlXEYrdQNYN4WoWQQ7ar8dFwEuZnCm8qCkWqmx3uu/XeEdwNmh9QbHt2T+FXf36W7GavQdjesdjrQ4o2QMhZ3XHEorUIxvMQqlqUDQklNZHOxJhpl1rs75z5Pm3Y+bV2ZkJJePvt2nkCrQZsXSkMQIeN9Y6b7/I0lEptOspaZY8QVEvo3WBrEy0mleXdtCF6jlAc8WpOu2yNyzb2yWhBx9//rvuVfwT8kUfwuVBSlcNhuBexbk5ts58r+rqsGcm7UruJxpMwYdZxKz1Btvy/zg1MJDIMzLui8zBZqwkVa/9gwm7qT3qUTukBcJX/ZzNAK9NOMV3d+QlF47Kc9Dt3VSNqllvQMAgdgAPTvce7XpB42s92bdhrsSyozBOx60VblzXJied5IhdKPZGdXlY0UMA/RQRuwohb6kawUcnzyXRw99Vgicl8PaTavSQTF/py1uW//50z/f0w0u/gOW1RPSVseXq37kaQTtthOwHagyd4NiuVQV9IR5rJ7HbULZwwDMsq3JZudcXLR6M/P8mq8cbzl7Tm9LYlDo2hp5grgRLIIipxgOsvCS/NHTrucKkX5V+J6s13DoaigVJWC6VkIn9TcAUWWSQVvsFPDGaZQhBRHmBj5v8CEnAEyDMhbkKnjoWPlF9+fOBaxh9TrRvsv027Lx0maOldnA9hZmw7zuD8rBu5XJKJpub02+xYsl8ax1LTCyUhTLp41YeLH+Jgq7hl+1aTFOsANGN+F/5cQ==
  template:
    metadata:
      name: orders-secret
      namespace: ticketing
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: payments-secret
  namespace: ticketing
spec:
  encryptedData:
    MONGODB_URL: AgAa8fGtPh1mVG3S0xaLSUSP0r7zNyMCEKp0uLwTA9SwlPhLibRTktRv2uPARjTj0qGdesQ7hhoPRoz7NuqIvuMflAGL4ZRt8KXv3XrdVluhfzDN7wPUd0L2fFgzIhlHI67NNOhKdIIOb/irOPfesn/aBbC5VDdIc/rDECYr7HJIhF4vAJ+i/SY+MuIK5z2TflE+0NZrY/J8qxRNxfXv1A1DorwxY7/4+4NiSMxWMc32fR7Aso2MDPOcgsbCwRKVEXw3RSSZYlSFaxh0QqJ41PH789Q2jCn+vn0W5xBEoTrCAacXcZAGBP+TVI1MTSw4GHFaHHpNKHnT4V9Q8AsGHHwQFyGXZl2dLmDnjFXyVCE4JkyGAU1spk1Lb17bR2jL3l97QxklQrW8Z/wxRLcQ9CLnkxDgMuaJuU9EU3Wa+agPNk6gXvHT8PSwm6a01UOi3RnQCWlz3WVcm+084TmieD/I8Nd+yTBoQwzeObZLiKWN7E6Dstg223iqoLf3vbrGBEqzTOLJco04J+B15WTJABZo2c+608ui6MNLj5g4SlUo/QU/U68UeflHSrm1uRMjU7W+7nmRN3zDO8c8NnkkHpWXvX1abpqSn2cDcCD2w69cz/cz00CHqIq1d92LHizGnGlEzVJ0g+Ezuwv3KeysvB8QEEaJL/raHdaNQ51jGoBFJ/aFF1U3FzaV4BbKIEIELGBxeQ8/0FlcZkKMDe4oUj3UwC4iNs7lItQYrvFxEaQ/kxNb7tI/T4mMgVitBLEjgVC5VczrszzKEUs=
  template:
    metadata:
      name: payments-secret
      namespace: ticketing
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: tickets-secret
  namespace: ticketing
spec:
  encryptedData:
    MONGODB_URL: AgB7Wgb0SDmogFwR3jkzjvfJyA6GKtz+v6xuBMvyInLkXvszYgRzu+WmZuj5hyvYlxE5/ldYB/i6n+6LB4+iLSFu+8MQ+Vly0dwnJZ+fGmD8W2Rfz390ok6vXJ0wmQP1vuGXzOWCKQj3hK3FP4Hq0yGpBJD1q4IoHllMeo+K5kLKorTDLorWEno8dEgmLUahGT7gciJNrcLK7yRf1e/nW7t9DXnhr0C115Ep5ILYFjJivPhCr01IGHbpEEd2UcKURy4xIGgbXCRFDu2v44CgRwLR5vGSpT6vGfGB3bKNJfGdoknYxLv+BoZqTrqcbvcNUU+YI9CSfmvSch9dTiHm5Tovzt4Bh0vfvPBECMOyFcE5YIuwk0KiJGO9/lI2+kqk6ilvdxEQzt1bYUcPO564VirQ+D/enthzByOk1VbEREUivhkC3RPwBIGYB4hKQK0gITaHatDh1wZ1+fQMpVn2A8rZ4tYn7nL0w4316ZfJjQsAZLMGYOwzq1ZRS7k2Vto8NwDuMei8nnWiDQBAukVj+wYGhlz+TKbiZmiNxl6GSRXlfTyP0mKfc7nPfVOoBJbWc3QHXLc/ySW0X2puxHPtPzb+noB3nlnslCR/DsO1qpcRWdVmwTFOY7mm79ygXuIdSD4Vko15felJ2ceVqL0U8hgH3/dcV9Wcg/tw9M1t1LHOwBA+kI3K5FhBcTjJD6Pc3C3bypRNzQa8eT12bFz1eAVyN8S+Fk/sOUKjoRQgReMHKAJUxCcR8IYWB6kryZB7fcb4cDBX0S8g
  template:
    metadata:
      name: tickets-secret
      namespace: ticketing
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ticketing-ingress
  namespace: ticketing
spec:
  ingressClassName: public
  rules:
  - host: ticketing-api.10.64.140.43.nip.io
    http:
      paths:
      - backend:
          service:
            name: auth-service
            port:
              number: 3000
        path: /auth
        pathType: Prefix
      - backend:
          service:
            name: tickets-service
            port:
              number: 3002
        path: /tickets
        pathType: Prefix
      - backend:
          service:
            name: orders-service
            port:
              number: 3003
        path: /orders
        pathType: Prefix
      - backend:
          service:
            name: payments-service
            port:
              number: 3004
        path: /payments
        pathType: Prefix
  - host: ticketing.10.64.140.43.nip.io
    http:
      paths:
      - backend:
          service:
            name: front-service
            port:
              number: 3001
        path: /
        pathType: Prefix
